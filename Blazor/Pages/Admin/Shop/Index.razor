@page "/Admin/Shops"
@using Entities.Common
@using Entities
@layout AdminLayout
@inject IAdminService<Shop, ShopDto, ShopResDto> Service
@inject SweetAlertService Swal

@if (Shops is null)
{
    <DisplaySpinner />
}
else
{
    <div class="overflow-x-auto px-12">
        <a href="/Admin/Shops/Create" class="btn btn-outline mb-10">
            <span><PlusIcon class="h-5 w-5"/></span>
            <span>ایجاد</span>
        </a>
        <table class="table">
            <!-- head -->
            <thead>
            <tr>
                <th>@(ModelExtensions.ToDisplay<ShopDto>(s => s.Title))</th>
                <th>@(ModelExtensions.ToDisplay<ShopDto>(s => s.Description))</th>
                <th>@(ModelExtensions.ToDisplay<ShopDto>(s => s.UserId))</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var shop in Shops)
            {
                <tr>
                    <ShopTrItem OnDelete="@(async (args) => await Delete(args))" Shop="shop"/>
                </tr>
            }
            </tbody>

        </table>
    </div>
}

@code{

    private IEnumerable<ShopResDto>? Shops { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Shops = await Service.Get();
    }

    private async Task Delete(int id)
    {
        await Swal.FireAsync("موفیت", "آیتم با موفقیت حذف شد", "success");
        Shops = Shops!.Where(s => !s.Id.Equals(id));
    }

}
