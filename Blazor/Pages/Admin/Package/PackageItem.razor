@using System.Net.Http.Headers
@inject IAdminService<Package, PackageDto, PackageResDto> Service

<td>
    <div class="flex items-center space-x-3 space-x-reverse">
        <div class="avatar">
            <div class="mask mask-squircle w-12 h-12">
                <img src="@Package.Image" alt="Avatar Tailwind CSS Component"/>
            </div>
        </div>
        <div>
            <div class="font-bold">@Package.Title</div>
        </div>
    </div>
    </td>
    <td>@Package.Price</td>
    <td>@Package.Description</td>
    <td>
    <a href="/Admin/Insurers/@Package.Id/Edit" class="btn btn-sm btn-outline">ویرایش</a>
    <label class="btn btn-outline btn-sm" for="@("image_" + Package.Id)">
        آپلود تصویر
    </label>
    <EditForm class="hidden" Model="Package">
        <InputFile OnChange="@((args) => OnInputFileChange(args, Package.Id))" id="@("image_" + Package.Id)" class="hidden"/>
    </EditForm>
    <button onclick="@(async () => await Delete(Package.Id))" class="btn btn-outline btn-sm btn-error">حذف</button>
    </td>

@code {

    [Parameter]
    public PackageResDto Package { get; set; } = null!;
    [Parameter]
    public EventCallback<PackageResDto> OnDelete { get; set; }
    
    private async Task OnInputFileChange(InputFileChangeEventArgs e, int id)
    {
        using var content = new MultipartFormDataContent();
        foreach (var file in e.GetMultipleFiles(1))
        {
            var fileContent = new StreamContent(file.OpenReadStream(long.MaxValue));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
            content.Add(fileContent, "Image", file.Name);
        }
        var response = await Service.UploadImage(id, content);
        if (response is null) return;
        Package.Image = response.Image;
    }
    
    
    private async Task Delete(int id)
    {
        await Service.Delete(id);
        await OnDelete.InvokeAsync(Package);

    }

}