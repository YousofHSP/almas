@page "/Admin/Slides"
@layout AdminLayout
@inject IAdminService<Slide, SlideDto, SlideResDto> Service
@inject SweetAlertService Swal

@if (Slides is null)
{
    <DisplaySpinner/>
}
else
{
    <div class="overflow-x-auto px-12">
        <a href="/Admin/Slides/Create" class="btn btn-outline mb-10">
            <span><PlusIcon class="h-5 w-5"/></span>
            <span>ایجاد</span>
        </a>
        <table class="table">
            <!-- head -->
            <thead>
            <tr>
                <th>@(ModelExtensions.ToDisplay<SlideResDto>(s => s.Title))</th>
                <th>@(ModelExtensions.ToDisplay<SlideResDto>(s => s.Description))</th>
                <th>@(ModelExtensions.ToDisplay<SlideResDto>(s => s.Image))</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var slide in Slides)
            {
                <tr>
                    <SlideTrItem OnDelete="@(async (args) => await Delete(args))" Slide="slide"></SlideTrItem>
                </tr>
            }
            </tbody>

        </table>
    </div>
}
@code {
    private List<SlideResDto>? Slides { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Slides = await Service.Get();
    }
    
    private async Task Delete(SlideResDto slide)
    {
        await Swal.FireAsync("موفیت", "آیتم با موفقیت حذف شد", "success");
        Slides!.Remove(slide);
    }

}