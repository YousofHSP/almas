@page "/Admin/Insurers"
@using System.Net.Http.Headers
@layout AdminLayout
@inject IAdminInsurerService Service

@if (Insurers is null || IsLoading)
{
    <DisplaySpinner/>
}
else
{
    <div class="overflow-x-auto px-12">
        <a href="/Admin/Insurers/Create" class="btn btn-outline mb-10">
            <span>
                <PlusIcon class="h-5 w-5"/>
            </span>
            <span>ایجاد</span>
        </a>
        <table class="table">
            <!-- head -->
            <thead>
            <tr>
                <th>@(ModelExtensions.ToDisplay<InsurerResDto>(s => s.Title))</th>
                <th>@(ModelExtensions.ToDisplay<InsurerResDto>(s => s.Description))</th>
                <th>@(ModelExtensions.ToDisplay<InsurerResDto>(s => s.UserFullName))</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var insurer in Insurers)
            {
                <tr>
                    <td>
                        <div class="flex items-center space-x-3 space-x-reverse">
                            <div class="avatar">
                                <div class="mask mask-squircle w-12 h-12">
                                    <img src="@insurer.Image" alt="Avatar Tailwind CSS Component"/>
                                </div>
                            </div>
                            <div>
                                <div class="font-bold">@insurer.Title</div>
                            </div>
                        </div>
                    </td>
                    <td>@insurer.Description</td>
                    <td>@insurer.UserFullName</td>
                    <td>
                        <a href="/Admin/Insurers/@insurer.Id" class="btn btn-sm btn-outline">ویرایش</a>
                        <label class="btn btn-outline btn-sm" for="@("image_" + insurer.Id)">
                            آپلود تصویر
                        </label>
                        <EditForm class="hidden" Model="insurer">
                            <InputFile OnChange="@((args) => OnInputFileChange(args, insurer.Id))" id="@("image_" + insurer.Id)" class="hidden"/>
                        </EditForm>
                        <button onclick="@(async () => await Delete(insurer.Id))" class="btn btn-outline btn-sm btn-error">حذف</button>
                    </td>
                </tr>
            }
            </tbody>

        </table>
    </div>
}

@code {

    [Parameter]
    public bool IsLoading { get; set; } = false;

    [Parameter]
    public List<InsurerResDto>? Insurers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Insurers = await Service.Get();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e, int id)
    {
        IsLoading = true;
        using var content = new MultipartFormDataContent();
        foreach (var file in e.GetMultipleFiles(1))
        {
            var fileContent = new StreamContent(file.OpenReadStream(long.MaxValue));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
            content.Add(fileContent, "Image", file.Name);
        }
        var response = await Service.UploadImage(id, content);
        IsLoading = false;
        if (response is null) return;
        foreach (var insurer in Insurers!.Where(insurer => !insurer.Id.Equals(response.Id)))
            insurer.Image = response.Image;
    }

    private async Task Delete(int id)
    {
        IsLoading = true;
        await Service.Delete(id);
        IsLoading = false;
        Insurers = Insurers!.Where(i => !i.Id.Equals(id)).ToList();
    }

}